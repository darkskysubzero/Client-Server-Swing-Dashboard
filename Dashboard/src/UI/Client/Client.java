/*
        Filename    :   Client
        Author      :   Aysham Hameed
        Created     :   15th October 2018
        OS          :   Windows 10
        Version     :   Netbeans IDE 8.2
        Desription  :   Client, contains UI & connects to Server.
 */ 

package UI.Client; //contained in UI.Client package.

import java.awt.Color;  //used to change button colors.
import javax.swing.*; //used for swing components
import java.net.*;  //used for socket object.
import java.io.*; //used of streams object.
import java.util.regex.*; //used to check input
import javax.swing.table.*;

public class Client extends javax.swing.JFrame { //main class Client extends
                                                 //JFrame to display frame
    
    int xMouse; //for x mouse position
    int yMouse; //for y mouse position
    
    //SOCKET & STREAM OBJECTS
    Socket clientSocket;
    ObjectOutputStream send2SERVER = null;
    ObjectInputStream getfromSERVER = null;
    
    DefaultTableModel model;    //GETS TABLE MODEL
    boolean SERVER_ONLINE = false; //FLAG VARIABLE
    
    public Client() {
        initComponents();
        //disableSearchPanel();
        disableLoginPanel();
       
        
        //CREATING CLIENT SOCKET & STREAM OBJECTS
        try{
           //creates Socket object
           clientSocket = new Socket("localhost",7777);
           //creates ObjectOutputStream object
           send2SERVER = new ObjectOutputStream(clientSocket.getOutputStream());
           //creates ObjectInputStream object
           getfromSERVER = new ObjectInputStream(clientSocket.getInputStream());
           jLabel17.setText("Server status : online"); //shows server status
            SERVER_ONLINE = true;//sets server flag variable to true
        }catch (IOException e){ //catches IO Exception
            System.out.println(e.toString()); //displays exception message
            jLabel17.setText("Server status : offline"); //shows server status
            SERVER_ONLINE = false; //sets server flag variable to false
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelHeader = new javax.swing.JPanel();
        buttonExit = new javax.swing.JButton();
        info = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        body = new javax.swing.JPanel();
        panelHolder = new javax.swing.JPanel();
        adminPanel = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        actionButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        searchPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        loginPanel = new javax.swing.JPanel();
        loginButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jMenuBar1 = new javax.swing.JMenuBar();
        mainMenu = new javax.swing.JMenu();
        searchMenuItem = new javax.swing.JMenuItem();
        loginMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Client dashboard");
        setUndecorated(true);
        setSize(new java.awt.Dimension(1000, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        panelHeader.setBackground(new java.awt.Color(255, 255, 255));
        panelHeader.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelHeaderMouseDragged(evt);
            }
        });
        panelHeader.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelHeaderMousePressed(evt);
            }
        });

        buttonExit.setBackground(new java.awt.Color(255, 255, 255));
        buttonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Graphics/Exit.png"))); // NOI18N
        buttonExit.setContentAreaFilled(false);
        buttonExit.setOpaque(true);
        buttonExit.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Graphics/Exit (2).png"))); // NOI18N
        buttonExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonExitMouseExited(evt);
            }
        });

        javax.swing.GroupLayout panelHeaderLayout = new javax.swing.GroupLayout(panelHeader);
        panelHeader.setLayout(panelHeaderLayout);
        panelHeaderLayout.setHorizontalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHeaderLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(buttonExit))
        );
        panelHeaderLayout.setVerticalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHeaderLayout.createSequentialGroup()
                .addComponent(buttonExit)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        info.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("You are not logged in.");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Graphics/cat.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 20)); // NOI18N
        jLabel3.setText("AYSHAM HAMEED");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Student no :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 153));
        jLabel5.setText("Z2RF1WMJ3");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Java basic project");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Search");
        jButton1.setToolTipText("");
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Login");
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel7.setBackground(new java.awt.Color(0, 202, 106));
        jLabel7.setOpaque(true);

        jLabel8.setBackground(new java.awt.Color(0, 202, 106));
        jLabel8.setOpaque(true);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Server status : unknown");

        javax.swing.GroupLayout infoLayout = new javax.swing.GroupLayout(info);
        info.setLayout(infoLayout);
        infoLayout.setHorizontalGroup(
            infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(404, 404, 404))
            .addGroup(infoLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(infoLayout.createSequentialGroup()
                        .addGroup(infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(infoLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(331, 331, 331))
                    .addGroup(infoLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addGroup(infoLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        infoLayout.setVerticalGroup(
            infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(infoLayout.createSequentialGroup()
                        .addGroup(infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(infoLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6))
                            .addGroup(infoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addContainerGap(23, Short.MAX_VALUE))))
        );

        body.setBackground(new java.awt.Color(51, 51, 51));
        body.setForeground(new java.awt.Color(255, 255, 255));
        body.setToolTipText("[255,255,255]");
        body.setLayout(new java.awt.CardLayout());

        panelHolder.setBackground(new java.awt.Color(51, 51, 51));
        panelHolder.setToolTipText("");
        panelHolder.setOpaque(false);

        adminPanel.setBackground(new java.awt.Color(51, 51, 51));
        adminPanel.setToolTipText("");
        adminPanel.setEnabled(false);

        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Insert", "Delete" }));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Action : ");

        jComboBox3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Animals", "Species" }));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Table :");

        actionButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        actionButton.setText("Perform action!");
        actionButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                actionButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                actionButtonMouseExited(evt);
            }
        });
        actionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionButtonActionPerformed(evt);
            }
        });

        logoutButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        logoutButton.setForeground(new java.awt.Color(255, 255, 255));
        logoutButton.setText("Logout");
        logoutButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        logoutButton.setContentAreaFilled(false);
        logoutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutButtonMouseExited(evt);
            }
        });
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminPanelLayout = new javax.swing.GroupLayout(adminPanel);
        adminPanel.setLayout(adminPanelLayout);
        adminPanelLayout.setHorizontalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addGap(329, 329, 329)
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminPanelLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminPanelLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(actionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(370, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        adminPanelLayout.setVerticalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(actionButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        searchPanel.setBackground(new java.awt.Color(51, 51, 51));
        searchPanel.setToolTipText("");
        searchPanel.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Data location : ");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Animals", "Species" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Name :");

        searchButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchButton.setText("Search");
        searchButton.setBorder(new javax.swing.border.MatteBorder(null));
        searchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchButtonMouseExited(evt);
            }
        });
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(284, Short.MAX_VALUE))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        loginPanel.setBackground(new java.awt.Color(51, 51, 51));
        loginPanel.setToolTipText("");
        loginPanel.setEnabled(false);

        loginButton.setText("Login");
        loginButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loginButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loginButtonMouseExited(evt);
            }
        });
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Username :");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Password :");

        jTextField2.setText("BruceW7");

        jPasswordField1.setText("bruceisbatman");

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(334, 334, 334)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordField1)
                            .addComponent(jTextField2))))
                .addContainerGap(342, Short.MAX_VALUE))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(loginButton)
                .addContainerGap(160, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelHolderLayout = new javax.swing.GroupLayout(panelHolder);
        panelHolder.setLayout(panelHolderLayout);
        panelHolderLayout.setHorizontalGroup(
            panelHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHolderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelHolderLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(loginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(panelHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelHolderLayout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addComponent(adminPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(13, 13, 13)))
        );
        panelHolderLayout.setVerticalGroup(
            panelHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHolderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelHolderLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(loginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(panelHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelHolderLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(adminPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        body.add(panelHolder, "card2");

        jMenuBar1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jMenuBar1MouseDragged(evt);
            }
        });
        jMenuBar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuBar1MousePressed(evt);
            }
        });

        mainMenu.setText("Menu");

        searchMenuItem.setText("Search");
        searchMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMenuItemActionPerformed(evt);
            }
        });
        mainMenu.add(searchMenuItem);

        loginMenuItem.setText("Login");
        loginMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginMenuItemActionPerformed(evt);
            }
        });
        mainMenu.add(loginMenuItem);

        jMenuBar1.add(mainMenu);

        helpMenu.setText("Help");

        aboutItem.setText("About");
        aboutItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutItem);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(info, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(body, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1000, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void enableAdminPanel(){     
        //ENABLES THE ADMIN PANEL & ALL ITS COMPONENTS
    /**/      adminPanel.show();                /**/
    /**/      adminPanel.enable();              /**/
    /**/                                        /**/            
    /**/      jComboBox2.setEnabled(true);      /**/
    /**/      jComboBox2.setVisible(true);      /**/    
    /**/      jComboBox3.setEnabled(true);      /**/
    /**/      jComboBox3.setVisible(true);      /**/
    /**/      jLabel15.setEnabled(true);        /**/
    /**/      jLabel15.setVisible(true);        /**/
    /**/      jLabel6.setEnabled(true);         /**/    
    /**/      jLabel16.setVisible(true);        /**/
    /**/      actionButton.setEnabled(true);    /**/
    /**/      actionButton.setVisible(true);    /**/
    /**/      logoutButton.setEnabled(true);    /**/
    /**/      logoutButton.setVisible(true);    /**/
    /***********************************************/    
          
    }
    
    public void disableAdminPanel(){    
        //DISABLES THE ADMIN PANEL & ALL ITS COMPONENTS
    /**/      adminPanel.hide();                /**/    
    /**/      adminPanel.disable();             /**/
    /**/                                        /**/
    /**/      jComboBox2.setEnabled(false);     /**/
    /**/      jComboBox2.setVisible(false);     /**/
    /**/      jComboBox3.setEnabled(false);     /**/
    /**/      jComboBox3.setVisible(false);     /**/
    /**/      jLabel15.setEnabled(false);       /**/
    /**/      jLabel15.setVisible(false);       /**/
    /**/      jLabel6.setEnabled(false);        /**/     
    /**/      jLabel16.setVisible(false);       /**/
    /**/      actionButton.setEnabled(false);   /**/
    /**/      actionButton.setVisible(false);   /**/
    /**/      logoutButton.setEnabled(false);   /**/
    /**/      logoutButton.setVisible(false);   /**/
    /***********************************************/
    }
    
    public void enableSearchPanel(){
        //ENABLES SEARCH PANEL & ALL ITS COMPONENTS
    /**/    searchPanel.enable(true); //enable search panel
    /**/    searchPanel.show();         //show search panel
    /**/    jLabel7.setBackground(new Color(0,202,106)); //change color of bar
    /**/                                        /**/
    /**/    jLabel9.setEnabled(true);           /**/
    /**/    jLabel9.setVisible(true);           /**/
    /**/    jComboBox1.setEnabled(true);        /**/    
    /**/    jComboBox1.setVisible(true);        /**/
    /**/    jLabel10.setEnabled(true);          /**/
    /**/    jLabel10.setVisible(true);          /**/
    /**/    jTextField1.setVisible(true);       /**/
    /**/    jTextField1.setEnabled(true);       /**/
    /**/    searchButton.setEnabled(true);      /**/
    /**/    searchButton.setVisible(true);      /**/
    /**/    jScrollPane1.setEnabled(true);      /**/
    /**/    jScrollPane1.setVisible(true);      /**/
    /********************************************/    
    }
    
    public void disableSearchPanel(){
        //DISABLES SEARCH PANEL & ALL ITS COMPONENTS
    /**/    searchPanel.enable(false);  //disable search panel
    /**/    searchPanel.hide();         //hide search panel
    /**/    jLabel7.setBackground(Color.WHITE); //change color of bar
    /**/                                        /**/
    /**/    jLabel9.setEnabled(false);          /**/
    /**/    jLabel9.setVisible(false);          /**/
    /**/    jComboBox1.setEnabled(false);       /**/
    /**/    jComboBox1.setVisible(false);       /**/
    /**/    jLabel10.setEnabled(false);         /**/
    /**/    jLabel10.setVisible(false);         /**/
    /**/    jTextField1.setVisible(false);      /**/
    /**/    jTextField1.setEnabled(false);      /**/
    /**/    searchButton.setEnabled(false);     /**/
    /**/    searchButton.setVisible(false);     /**/
    /**/    jScrollPane1.setEnabled(false);     /**/
    /**/    jScrollPane1.setVisible(false);     /**/
    /*********************************************/
    }
    
    public void enableLoginPanel(){
        //ENABLES LOGIN PANEL
    /**/    loginPanel.enable(true); //enable login panel
    /**/    loginPanel.show();      //show login panel
    /**/    jLabel8.setBackground(new Color(0,202,106));//change color of bar
    /**/                                        /**/
    /**/    loginButton.setEnabled(true);       /**/
    /**/    loginButton.setVisible(true);       /**/
    /**/    jLabel1.setEnabled(true);           /**/
    /**/    jLabel1.setVisible(true);           /**/
    /**/    jTextField2.setEnabled(true);       /**/
    /**/    jTextField2.setVisible(true);       /**/
    /**/    jPasswordField1.setEnabled(true);   /**/
    /**/    jPasswordField1.setVisible(true);   /**/
    /**********************************************/    
    }
    
    public void disableLoginPanel(){
        //DISABLING LOGIN PANE
    /**/    loginPanel.enable(false); //disble login panel
    /**/    loginPanel.hide();        //hide login panel
    /**/    jLabel8.setBackground(Color.WHITE);//change color of bar
    /**/                                        /**/
    /**/    loginButton.setEnabled(false);      /**/
    /**/    loginButton.setVisible(false);      /**/
    /**/    jLabel1.setEnabled(false);          /**/
    /**/    jLabel1.setVisible(false);          /**/
    /**/    jTextField2.setEnabled(false);      /**/
    /**/    jTextField2.setVisible(false);      /**/
    /**/    jPasswordField1.setEnabled(false);  /**/
    /**/    jPasswordField1.setVisible(false);  /**/
    /**********************************************/
    }
    
    private void buttonExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonExitMouseEntered
        buttonExit.setBackground(new Color(232,17,35)); //hover in effect
    }//GEN-LAST:event_buttonExitMouseEntered

    private void buttonExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonExitMouseExited
       buttonExit.setBackground(new Color(255,255,255)); //hover out effect
    }//GEN-LAST:event_buttonExitMouseExited

    private void buttonExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonExitMouseClicked
        //An array of options to be provided for user.
        String options [] = {"Exit","Minimise","Cancel"};
        //Asks user which option to pick, and store as an int.
        int option = JOptionPane.showOptionDialog(null, "Are you sure you want"
                + " to quit?", "Exit",0 ,0, null, options, options[0]);
        
        if(option==0){          //if user pickts the first choice (EXIT)
            System.exit(0);     //then exit the system
        }else                   //else
            
        if(option==1){          //is user picks the second choice (MINIMISE)
            setState(ICONIFIED);//then minimise.
        }
    }//GEN-LAST:event_buttonExitMouseClicked

    private void panelHeaderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelHeaderMousePressed
       
    }//GEN-LAST:event_panelHeaderMousePressed

    private void panelHeaderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelHeaderMouseDragged
       
    }//GEN-LAST:event_panelHeaderMouseDragged

    private void jMenuBar1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuBar1MousePressed
       xMouse = evt.getX(); //gets the x postion of mouse on header
       yMouse = evt.getY(); //gets the y position of mouse on header
    }//GEN-LAST:event_jMenuBar1MousePressed

    private void jMenuBar1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuBar1MouseDragged
       int x = evt.getXOnScreen(); //gets x position of mouse on screen 
       int y = evt.getYOnScreen(); //gets y position of mouse on screen
       this.setLocation(x-xMouse, y-yMouse); //postions of mouse on header -
                                             //postions of mouse on screen
    }//GEN-LAST:event_jMenuBar1MouseDragged

    private void searchButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseEntered
        //WHEN MOUSE IS ENTERED (HOVERING EFFECT)
        searchButton.setBackground(new Color(204, 0, 102));
        searchButton.setForeground(Color.black);
    }//GEN-LAST:event_searchButtonMouseEntered

    private void searchButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseExited
        //WHE MOUSE LEVEAS  BUTTON (HOVERING EFFECT)
        searchButton.setBackground(new Color(238,238,238));
        searchButton.setForeground(Color.black);
    }//GEN-LAST:event_searchButtonMouseExited

    private void searchMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMenuItemActionPerformed
       disableLoginPanel(); //disable login panel
       enableSearchPanel();//enable search panel
       
    }//GEN-LAST:event_searchMenuItemActionPerformed

    private void loginMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginMenuItemActionPerformed
        enableLoginPanel(); //enable login panel
        disableSearchPanel();//disable search panel
    }//GEN-LAST:event_loginMenuItemActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        model = (DefaultTableModel)jTable1.getModel(); //type of jtable model
        
        //which table the user chose
        String dataLocation = (String) jComboBox1.getSelectedItem();
        
        //what they want to search
        String name = jTextField1.getText();
       
        //the regex must only have letters and must be >=3
        boolean correcInput = Pattern.matches("[a-zA-Z]{3,}", name);
        
        //if input is wrong
        if(correcInput==false){
            
            //display a message
            JOptionPane.showMessageDialog(null,"Must be text & 3 characters "
                    + "long!", "Error",JOptionPane.ERROR_MESSAGE);
        }else{
            
            //else if its right
            //s~bob=Species (COMPILE STRING TO BE SEND TO SERVER)
             String input = "s~"+name+"="+dataLocation;
             
             //flag variable 
             boolean userExists=true;
             if(SERVER_ONLINE){ //if server is online only then
             //while(true){//-----------------------------------------------------
             /*|*/     try{
             /*|*/         //asking server does user exist?
             /*|*/         send2SERVER.writeObject(input);
             /*|*/         
             /*|*/         //getting answer from server
             /*|*/         String messageFromServer = (String) getfromSERVER.readObject();
             /*|*/         
             /*|*/         
             /*|*/        /*********************************************/ 
             /*|*/        /*|*/ //if name exists then get array data/*|*/
             /*|*/        /*********************************************/  
             /*|*/         if(messageFromServer.equals("nameExists")){  
             /*|*/        /*|*/     //gets the name of table from server
             /*|*/        /*|*/     String nameOfTable = (String) getfromSERVER.readObject();
             /*|*/        /*|*/    
             /*|*/        /*|*/     //if Animal table is seleected
             /*|*/        /*|*/    /*|*/ if(nameOfTable.equals("Animals")){ 
             /*|*/        /*|*/    /*|*/   //GETTING DATA FROM SERVER 
             /*|*/        /*|*/    /*|*/    String animalID[]=(String []) getfromSERVER.readObject();   
             /*|*/       /*|*/    /*|*/    String animalNames[]=(String[]) getfromSERVER.readObject();
             /*|*/        /*|*/    /*|*/    String description[]=(String[]) getfromSERVER.readObject();
             /*|*/        /*|*/    /*|*/    String speciesIDFK[]=(String[]) getfromSERVER.readObject(); 
             /*|*/         /*|*/    /*|*/
             /*|*/        /*|*/    /*|*/
             /*|*/        /*|*/    /*|*/    //make proper Animal columns 
             /*|*/        /*|*/    /*|*/    makeAnimalColumns();   
             /*|*/        /*|*/    /*|*/    model = (DefaultTableModel) jTable1.getModel();
             /*|*/        /*|*/    /*|*/    for (int x=0; x<animalID.length; x++){
             /*|*/        /*|*/    /*|*/    model.addRow(new Object[]{animalID[x], animalNames[x],description[x],speciesIDFK[x]});
             /*|*/        /*|*/    /*|*/    }
             /*|*/        /*|*/    /***************************************************/     
             /*|*/        /*|*/     } else 
             /*|*/        /*|*/    
             /*|*/        /*|*/    /*|*/    //GETTING DATA FROM SERVER 
             /*|*/        /*||*/    /*|*/if(nameOfTable.equals("Species")){
             /*|*/        /*|*/    /*|*/     String speciesID[]=(String[]) getfromSERVER.readObject();
             /*|*/        /*|*/    /*|*/     String speciesNames[]=(String[]) getfromSERVER.readObject();                
             /*|*/        /*|*/    /*|*/     makeSpeciesColumns();
             /*|*/        /*|*/    /*|*/     model = (DefaultTableModel) jTable1.getModel();
             /*|*/        /*|*/    /*|*/    for (int x=0; x<speciesID.length; x++){
             /*|*/        /*|*/    /*|*/        model.addRow(new Object[]{speciesID[x], speciesNames[x]});
             /*|*/        /*|*/    /*|*/    }
             /*|*/        /*|*/    /*|*/ }
             /*|*/        /**********************************************************/
             /*|*/         
             /*|*/        } else 
             /*|*/             
             /*|*/        /*********************************************/ 
             /*|*/        /*|*/ //if name does not exists then display message/*|*/
             /*|*/        /*********************************************/  
             /*|*/        /*|*/  if(messageFromServer.equals("!nameExists")){
             /*|*/        /*|*/      userExists = false; //set user exists to false
             /*|*/        /*|*/      if(userExists==false){//and display message
             /*|*/        /*|*/          JOptionPane.showMessageDialog(null, "Name does"
             /*|*/        /*|*/                  + " not exist!","Unknown name!",
             /*|*/        /*|*/                  JOptionPane.ERROR_MESSAGE);
             /*|*/        /*|*/      }
             /*|*/        /*|*/  }
             /*|*/         /*********************************************************/
             /*|*/         
             /*|*/     } catch (IOException e){
             /*|*/         System.out.println(e.toString());
             /*|*/         System.exit(1);
             /*|*/     }catch (ClassNotFoundException e){
             /*|*/         System.out.println(e.toString());
             /*|*/     }
             /*|*///}
             /*|*/
             /*|*/} else {
             /*|*/JOptionPane.showMessageDialog(null, "Server is offline!","Unreachable host!",JOptionPane.ERROR_MESSAGE);
             /*|*/}
              /*|**************************************************************/
             
        }
        
        
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
      
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
         // model.setRowCount(0);
         //BASE ON SELECTION IN COMBOBOX MAKE CORRECT COLUMNS
        if(jComboBox1.getSelectedIndex()==0){makeAnimalColumns();}  else 
        if(jComboBox1.getSelectedIndex()==1){makeSpeciesColumns();}
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        //FLAG VARIABLES----------------
        boolean usernameFieldValid = true;
        boolean passwordFieldValid = true;
        
        //IF TEXTFIELS ARE EMPTY THEN 
        if(jTextField2.getText().equals("") || jTextField2.getText().length()<3){
            usernameFieldValid = false; //SET FALG TO FALSE
            
            //SHOW MESSAGE PLEASE ENTER A VALID USERNAME
            JOptionPane.showMessageDialog(null, "Please enter a valid username!"
                    + " username must at least be 3 characters long",
                    "Invalid username", JOptionPane.ERROR_MESSAGE);

        } else //ELSE
            
        //IF PASSWORD FIELD IS EMPTY THEN     
        if(jPasswordField1.getText().equals("") || jPasswordField1.getText().length()<5){
            passwordFieldValid = false;//SET FLAH TO FALSE
            
            //SHOW MESSAGE PLEASE ENTER A VALID PASSWORD
            JOptionPane.showMessageDialog(null, "Please enter a valid password! "
                    + "password must atleast be 5 characters long",
                    "Invalid password", JOptionPane.ERROR_MESSAGE);
        }
        String username=""; //EMPTY VARIABLE USERNAME
        String password=""; //EMPTY VARIBALE PASSWORD 
        
        //if textfields are not empty then
        if(usernameFieldValid==true && passwordFieldValid==true){
            username = jTextField2.getText(); //GET TEXT FROM USERNAME FIELD
            password= jPasswordField1.getText();//GET PASSWORD TOO
                
            //check if server is online
            if(SERVER_ONLINE){
                try{
                    ////login~username;password(SENDING TO SERVER)
                    send2SERVER.writeObject("login~"+username+";"+password);
                    
                    //getting response from server 
                    String response = (String)getfromSERVER.readObject();
                    
                    //if response is yes (USER EXISTS) then 
                    if(response.equals("Yes")){ //show welcome message & 
                        JOptionPane.showMessageDialog(null, "Welcome! "+username);
                        jLabel1.setText("You are logged in as, "+username);
                        enableAdminPanel();
                        disableLoginPanel();
                        disableSearchPanel();
                        
                    } else{
                        //showing response to user
                        JOptionPane.showMessageDialog(null, response,"Unknown",JOptionPane.ERROR_MESSAGE);
                    }
                    //CATCHES BOTH EXCEPTION
                }catch (IOException e){
                    System.out.println(e.toString());
                } catch (ClassNotFoundException e){
                    System.out.println(e.toString());
                }

            }else { //ELSE IF SERVER IS OFFLINE THEN PRINT CORRECT MESSAGE
                JOptionPane.showMessageDialog(null, "Server is offline!","Unreachable host!",JOptionPane.ERROR_MESSAGE);
            }
        }
        
        //USERNAME FIELD IS FOCUSED
        jTextField2.requestFocusInWindow();
       
    }//GEN-LAST:event_loginButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        jLabel1.setText("You are not logged in."); //CHANGE LABEL
        disableAdminPanel();    //DISBALES ADMIN AND 
        disableLoginPanel();// LOGIN PANEL
        enableSearchPanel();// & SHOWS SEARCH PANEL
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void logoutButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseEntered
        //HOVERING EFFECT FOR BUTTON WHEN ENTERS
        logoutButton.setContentAreaFilled(true);
        logoutButton.setBackground(new Color(204, 0, 102));
        logoutButton.setForeground(Color.black);
        
    }//GEN-LAST:event_logoutButtonMouseEntered

    private void logoutButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseExited
       //HOVERING EFFECT FOR BUTTON WHEN EXITS
       logoutButton.setContentAreaFilled(false);
       logoutButton.setForeground(Color.white);
    }//GEN-LAST:event_logoutButtonMouseExited

    private void actionButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionButtonMouseEntered
            //HOVERING EFFECT FOR BUTTON WHEN ENTERS
        actionButton.setBackground(new Color(0, 202, 106));
        actionButton.setForeground(Color.black);
    }//GEN-LAST:event_actionButtonMouseEntered

    private void actionButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionButtonMouseExited
        //HOVERING EFFECT FOR BUTTON WHEN EXITS
        actionButton.setBackground(new Color(238,238,238));
        actionButton.setForeground(Color.black);
    }//GEN-LAST:event_actionButtonMouseExited

    private void loginButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseEntered
            //HOVERING EFFECT FOR BUTTON WHEN ENTERS
        loginButton.setBackground(new Color(0, 202, 106));
        loginButton.setForeground(Color.black);
    }//GEN-LAST:event_loginButtonMouseEntered

    private void loginButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseExited
        //HOVERING EFFECT FOR BUTTON WHEN EXITS
        loginButton.setBackground(new Color(238,238,238));
        loginButton.setForeground(Color.black);
    }//GEN-LAST:event_loginButtonMouseExited

    private void actionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionButtonActionPerformed
       //GETS ACTION  TABLE FROM COMBOBOX
       String action = (String) jComboBox2.getSelectedItem();
       //GETS SELECT TABLE FROM COMBOBOX
       String table = (String) jComboBox3.getSelectedItem();
       
       String requestServer = "";
       
       //CHECK STATEMENT 1 (INSERT)---------------------------------------------
       if(action.equals("Insert")){
           if(table.equals("Animals")){  //IF ANIMAL TABLE IS SELECTED
            //i~Animals;animalID,animalName,description,speciesID
            //INPUT FIELDS FOR ANIMAL
            String animalID = JOptionPane.showInputDialog(null,"Animal ID:");
            String animalName = JOptionPane.showInputDialog(null,"Animal name:");
            String description = JOptionPane.showInputDialog(null,"Description:");
            String speciesIDFK = JOptionPane.showInputDialog(null,"Species ID FK");
            requestServer="i~Animals;"+animalID+","+animalName+","+description+","
                    +speciesIDFK;
           }else
               
           if(table.equals("Species")){ //IF SPECIES TABLE IS SELECTED
            //i~Species;speciesID,speciesName
            //INPUT FIELDS FOR SPECIES
            String speciesID = JOptionPane.showInputDialog(null,"Species ID:");
            String speciesName = JOptionPane.showInputDialog(null,"Species name:");
            requestServer="i~Species;"+speciesID+","+speciesName;
           }
       } else
           
       //CHECK STATEMENT 2 (DELETE)-------------------------------------------
       //if Delete action is selected    
       if(action.equals("Delete")){
           //then of Animal table is selected
           if(table.equals("Animals")){
               String animalID = JOptionPane.showInputDialog(null,"Animal ID");
               ////d~animalID 
               requestServer="d~"+animalID;
           } else
              
           //if species table is selected (CAN NOT DELETE)    
           if(table.equals("Species")){
               JOptionPane.showMessageDialog(null, "Can not delete from Species.");
           }
       }
       if(!requestServer.equals("")) //IF IT IS NOT BLANKK
       {
            try{ //SEND REQUEST TO SERVER
                send2SERVER.writeObject(requestServer);
                String response = (String) getfromSERVER.readObject();
                JOptionPane.showMessageDialog(null, response);
                
                //CATCHING BOTH EXCEPTIONS
            }catch (IOException e){
                System.out.println(e.toString());
            }catch (ClassNotFoundException e){
                System.out.println(e.toString());
            }
       }
    }//GEN-LAST:event_actionButtonActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
                //when the form/window is activated and focused
        try{
                Socket testSocket = new Socket(); //create new socket object
                //try connection to server
                testSocket.connect(new InetSocketAddress("localhost", 7777),10);
                SERVER_ONLINE = true; //and make SERVER_ONLINE = true
                System.out.println("Server is active!");
                } catch (IOException e){ //catch exception 
                    System.out.println(e.toString()); //print exception
                    SERVER_ONLINE = false;//and make SERVER_ONLINE = false
                }
        
        if(SERVER_ONLINE==true){ //if SERVER_ONLINE THEN 
            jLabel17.setText("Server status : online"); //DISPLAY CORRECT
        } else jLabel17.setText("Server status : offline");//STRING
        
        
        
    }//GEN-LAST:event_formWindowActivated

    private void aboutItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutItemActionPerformed
        //displays about dialog
        String display = "Developer : alin\nVersion : 1.0";
        JOptionPane.showMessageDialog(null, display,"About",
                JOptionPane.PLAIN_MESSAGE);
        
    }//GEN-LAST:event_aboutItemActionPerformed

    public void makeAnimalColumns(){
        
         model = (DefaultTableModel) jTable1.getModel(); //GET TABLE MODEL
         model.setColumnCount(0);   //CLEAR ALL COLUMNSS
         model.setRowCount(0);      //CLEAR ALL ROWS
            //MAKE THESE COLUMNS
            String columns[] = {"Animal ID","Animal name","Description","Species ID"};
            for (int x=0; x<columns.length; x++){
            model.addColumn(columns[x]); //DISPLAY THE COLUMNS
            }
    }

    public void makeSpeciesColumns(){
         model = (DefaultTableModel) jTable1.getModel();//GET TABLE MODEL
        model.setColumnCount(0); //CLEAR ALL COLUMNSS
        model.setRowCount(0); //CLEAR ALL ROWS
            //MAKE THESE COLUMNS
            String columns[] = {"Species ID","Species name"};
            for (int x=0; x<columns.length; x++){
            model.addColumn(columns[x]);//DISPLAY THE COLUMNS
            }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutItem;
    private javax.swing.JButton actionButton;
    private javax.swing.JPanel adminPanel;
    private javax.swing.JPanel body;
    private javax.swing.JButton buttonExit;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JPanel info;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton loginButton;
    private javax.swing.JMenuItem loginMenuItem;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JButton logoutButton;
    private javax.swing.JMenu mainMenu;
    private javax.swing.JPanel panelHeader;
    private javax.swing.JPanel panelHolder;
    private javax.swing.JButton searchButton;
    private javax.swing.JMenuItem searchMenuItem;
    private javax.swing.JPanel searchPanel;
    // End of variables declaration//GEN-END:variables
}
